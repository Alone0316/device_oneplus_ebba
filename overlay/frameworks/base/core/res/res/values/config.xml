<?xml version="1.0" encoding="utf-8"?>
<!--
/*
** Copyright 2012, The Android Open Source Project
**
** Licensed under the Apache License, Version 2.0 (the "License");
** you may not use this file except in compliance with the License.
** You may obtain a copy of the License at
**
**     http://www.apache.org/licenses/LICENSE-2.0
**
** Unless required by applicable law or agreed to in writing, software
** distributed under the License is distributed on an "AS IS" BASIS,
** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
** See the License for the specific language governing permissions and
** limitations under the License.
*/
-->

<!-- These resources are around just to allow their values to be customized for different hardware and product builds. -->
<resources>

<!-- Whether a software navigation bar should be shown. NOTE: in the future this may be autodetected from the Configuration. -->
<bool name="config_showNavigationBar">true</bool>

<!-- Whether the display cutout region of the main built-in display should be forced to black in software (to avoid aliasing or emulate a cutout that is not physically existent). -->
<bool name="config_fillMainBuiltInDisplayCutout">false</bool>

<!-- Display cutout configuration -->
<string name="config_mainBuiltInDisplayCutout">M 0,0 L -28, 0 L -24.3940446283, 16.0595537175 C -23.5582133885, 24.4178661152 -19.6, 90.0 -11.2, 90.0 L 11.2, 90.0 C 19.6, 90.0 23.5582133885, 24.4178661152 24.3940446283, 16.0595537175 L 28, 0 Z</string>

<!-- boolean indicating whether the WiFi chipset has 5GHz band support. Note: This config is replacing the config_wifi_dual_band_support since more bands may now be supported (such as 6GHz), the naming dual_band is no longer indicative, and a separate config now exists for each band -->
<bool name="config_wifi_dual_band_support">true</bool>

<!-- Enable 802.11ac for Wifi hotspot (SAP) -->
<bool name="config_wifi_softap_ieee80211ac_supported">true</bool>

<!-- Flag indicating whether the we should enable the automatic brightness in Settings. Software implementation will be used if config_hardware_auto_brightness_available is not set -->
<bool name="config_automatic_brightness_available">true</bool>

<!-- Stability requirements in milliseconds for accepting a new brightness level.  This is used for debouncing the light sensor.  Different constants are used to debounce the light sensor when adapting to brighter or darker environments.  This parameter controls how quickly brightness changes occur in response to an observed change in light level that exceeds the hysteresis threshold. -->
<integer name="config_autoBrightnessBrighteningLightDebounce">4000</integer>
<integer name="config_autoBrightnessDarkeningLightDebounce">8000</integer>

<!-- Fast brightness animation ramp rate in brightness units per second-->
<integer name="config_brightness_ramp_rate_fast">180</integer>

<!-- Slow brightness animation ramp rate in brightness units per second-->
<integer name="config_brightness_ramp_rate_slow">60</integer>

<!-- Array of hysteresis constraint values for brightening, represented as tenths of a percent. The length of this array is assumed to be one greater than config_ambientThresholdLevels. The brightening threshold is calculated as lux * (1.0f + CONSTRAINT_VALUE). When the current lux is higher than this threshold, the screen brightness is recalculated. See the config_ambientThresholdLevels description for how the constraint value is chosen. -->
<integer-array name="config_ambientBrighteningThresholds">
<item>100</item>
    </integer-array>

<!-- Array of hysteresis constraint values for darkening, represented as tenths of a percent. The length of this array is assumed to be one greater than config_ambientThresholdLevels. The darkening threshold is calculated as lux * (1.0f - CONSTRAINT_VALUE). When the current lux is lower than this threshold, the screen brightness is recalculated. See the config_ambientThresholdLevels description for how the constraint value is chosen. -->
<integer-array name="config_ambientDarkeningThresholds">
<item>200</item>
    </integer-array>

<!-- Array of light sensor LUX values to define our levels for auto backlight brightness support.
         The N entries of this array define N  1 zones as follows:
         Zone 0:        0 <= LUX < array[0]
         Zone 1:        array[0] <= LUX < array[1]
         ...
         Zone N:        array[N - 1] <= LUX < array[N]
         Zone N + 1     array[N] <= LUX < infinity
         Must be overridden in platform specific overlays -->
<array name="config_autoBrightnessLevels" />
<item>10</item>
        <item>30</item>
        <item>60</item>
        <item>100</item>
        <item>150</item>
        <item>210</item>
        <item>255</item>
    </integer-array>

<!-- The maximum range of gamma adjustment possible using the screen auto-brightness adjustment setting. -->
<fraction name="config_autoBrightnessAdjustmentMaxGamma">300.0%</fraction>

<!-- User activity timeout: Maximum screen dim duration as a percentage of screen off timeout.
         This resource is similar to config_maximumScreenDimDuration but the maximum
         screen dim duration is defined as a ratio of the overall screen off timeout
         instead of as an absolute value in milliseconds.  This is useful for reducing
         the dim duration when the screen off timeout is very short.
         When computing the screen dim duration, the power manager uses the lesser
         of the effective durations expressed by config_maximumScreenDimDuration and
         config_maximumScreenDimRatio.
         This value must be between 0% and 100%.  If the value is zero, the screen will not
         dim before the device goes to sleep.
    -->
<fraction name="config_maximumScreenDimRatio">29.999996%</fraction>

<!-- Screen brightness used to dim the screen when the user activity
         timeout expires.  May be less than the minimum allowed brightness setting
         that can be set by the user. -->
<integer name="config_screenBrightnessDim">10</integer>

<!-- Sets the minimum and maximum tilt tolerance for each possible rotation.
         This array consists of 4 pairs of values which specify the minimum and maximum
         tilt angle at which the device will transition into each rotation.
         The tilt angle represents the direction in which the plane of the screen is facing;
         it is also known as the angle of elevation.
           -90 degree tilt means that the screen is facing straight down
                           (the device is being held overhead upside-down)
             0 degree tilt means that the screen is facing outwards
                           (the device is being held vertically)
            90 degree tilt means that the screen is facing straight up
                           (the device is resting on a flat table)
        The default tolerances are set conservatively such that the device is more
        likely to remain in its natural orientation than rotate into a counterclockwise,
        clockwise, or reversed posture (with an especially strong bias against the latter)
        to prevent accidental rotation while carrying the device in hand.
        These thresholds may need to be tuned when the device is intended to be
        mounted into a dock with a particularly shallow profile wherein rotation
        would ordinarily have been suppressed.
        It is helpful to consider the desired behavior both when the device is being
        held at a positive tilt (typical case) vs. a negative tilt (reading overhead in
        bed) since they are quite different.  In the overhead case, we typically want
        the device to more strongly prefer to retain its current configuration (in absence
        of a clear indication that a rotation is desired) since the user's head and neck may
        be held at an unusual angle.
    -->
<integer-array name="config_autoRotationTiltTolerance">
<item>-25</item>
        <item>70</item>
        <item>-25</item>
        <item>65</item>
        <item>-25</item>
        <item>60</item>
        <item>-25</item>
        <item>65</item>
    </integer-array>
<!-- The nominal white coordinates, in CIE1931 XYZ color space, for Display White Balance to
         use in its calculations. AWB will adapt this white point to the target ambient white
         point. The array must include a total of 3 float values (X, Y, Z) -->
<string-array name="config_displayWhiteBalanceDisplayNominalWhite">
        <item>0.950456</item>
        <item>1.000000</item>
        <item>1.089058</item>
    </string-array>

<!-- The display primaries, in CIE1931 XYZ color space, for display
         white balance to use in its calculations. The array must include a total of 12 float
         values: 3 values per color (X, Y, Z) and 4 colors (R, G, B, W) -->
<string-array name="config_displayWhiteBalanceDisplayPrimaries">
        <item>0.412315</item>
        <item>0.212600</item>
        <item>0.019327</item>
        <item>0.357600</item>
        <item>0.715200</item>
        <item>0.119200</item>
        <item>0.180500</item>
        <item>0.072200</item>
        <item>0.950633</item>
        <item>0.950456</item>
        <item>1.000000</item>
        <item>1.089058</item>
    </string-array>

<!-- When true use the linux /dev/input/event subsystem to detect the switch changes
         on the headphone/microphone jack. When false use the older uevent framework. -->
<bool name="config_useDevInputEventForAudioJack">true</bool>

<!-- If this is true, the screen will come on when you unplug usb/power/whatever. -->
<bool name="config_unplugTurnsOnScreen">true</bool>

<!-- Specifies whether to decouple the auto-suspend state of the device from the display on/off state. -->
<bool name="config_powerDecoupleAutoSuspendModeFromDisplay">false</bool>

<!-- Specifies whether to decouple the interactive state of the device from the display on/off state. -->
<bool name="config_powerDecoupleInteractiveModeFromDisplay">false</bool>

<!-- Is the device capable of hot swapping an UICC Card -->
<bool name="config_hotswapCapable">true</bool>

<!-- Flag specifying whether VoLTE is availasble on device -->
<bool name="config_device_volte_available">true</bool>

<!-- Flag specifying whether VoLTE is available on device -->
<bool name="config_device_vt_available">true</bool>

<!-- List of biometric sensors on the device, in decreasing strength. Consumed by AuthService
     when registering authenticators with BiometricService. Format must be ID:Modality:Strength,
     where: IDs are unique per device, Modality as defined in BiometricAuthenticator.java,
     and Strength as defined in Authenticators.java -->
<string-array name="config_biometric_sensors">
        <item>0:2:15</item>
    </string-array>

<!-- Should the pinner service pin the Camera application? -->
<bool name="config_pinnerCameraApp">false</bool>

<!-- Should the pinner service pin the Home application? -->
<bool name="config_pinnerHomeApp">false</bool>

<!-- Boolean indicating if current platform supports HFP inband ringing -->
<bool name="config_bluetooth_hfp_inband_ringing_support">true</bool>

<!-- Screen brightness when dozing. -->
<integer name="config_screenBrightnessDoze">1</integer>

<!-- Whether the always on display mode is available. -->
<bool name="config_dozeAlwaysOnDisplayAvailable">false</bool>

<!-- Disable AOD by default -->
<bool name="config_dozeAlwaysOnEnabled">true</bool>

<!-- True if the display hardware only has brightness buckets rather than a full range of
         backlight values -->
<bool name="config_displayBrightnessBucketsInDoze">false</bool>

<!-- Boolean indicating whether the HWC setColorTransform function can be performed efficiently
         in hardware. -->
<bool name="config_setColorTransformAccelerated">false</bool>

<!-- Number of physical SIM slots on the device. This includes both eSIM and pSIM slots, and
         is not necessarily the same as the number of phones/logical modems supported by the device.
         For example, a multi-sim device can have 2 phones/logical modems, but 3 physical slots,
         or a single SIM device can have 1 phones/logical modems, but 2 physical slots (one eSIM
         and one pSIM) -->
<integer name="config_num_physical_slots">1</integer>

<!-- reference volume index for music stream to limit headphone volume and display warning -->
<integer name="config_safe_media_volume_index">18</integer>

<!-- True if Unprocessed audio source supports the required frequency range and level -->
<bool name="config_supportAudioSourceUnprocessed">true</bool>

<!-- Indicate whether closing the lid causes the device to go to sleep and opening
         it causes the device to wake up.
         The default is false. -->
<bool name="config_lidControlsSleep">false</bool>

</resources>
